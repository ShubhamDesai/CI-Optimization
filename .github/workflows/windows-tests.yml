name: PR Test Results Storage

on:
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-json-report

      - name: Get PR ID
        run: echo "PR_ID=${{ github.event.number }}" >> $GITHUB_ENV

      - name: Retrieve Previous Artifacts (If Exists)
        run: |
          echo "Fetching artifacts from previous runs..."
          ARTIFACTS_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")

          echo "Raw API Response: $ARTIFACTS_RESPONSE"

          ARTIFACT_URL=$(echo "$ARTIFACTS_RESPONSE" | jq -r '.artifacts[] | select(.name=="pr-'${{ env.PR_ID }}'-test-results") | .archive_download_url' || echo "")

          echo "Fetched Artifact URL: $ARTIFACT_URL"

          if [[ -z "$ARTIFACT_URL" || "$ARTIFACT_URL" == "null" ]]; then
            echo "No previous artifacts found for PR-${PR_ID}. Running fresh tests."
          else
            echo "Found previous artifacts. Downloading..."
            mkdir -p artifacts/pr-${PR_ID}
            curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -o artifacts/pr-${PR_ID}/test-results.zip "$ARTIFACT_URL"
            unzip -o artifacts/pr-${PR_ID}/test-results.zip -d artifacts/pr-${PR_ID}
          fi

      - name: Run Tests and Save Results
        run: |
          mkdir -p artifacts/pr-${PR_ID}  # Ensure directory exists
          pytest --tb=short --json-report --json-report-file=artifacts/pr-${PR_ID}/test_results.json || true

      - name: Debug: Check If Test Results Exist
        run: |
          if [[ -f "artifacts/pr-${PR_ID}/test_results.json" ]]; then
            echo "Test results file exists."
            cat artifacts/pr-${PR_ID}/test_results.json  # Print contents for debugging
          else
            echo "Test results file NOT found!"
            exit 1  # Fail the workflow for debugging
          fi

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: pr-${{ env.PR_ID }}-test-results
          path: artifacts/pr-${{ env.PR_ID }}/test_results.json

  retrieve-results:
    needs: run-tests
    runs-on: ubuntu-latest

    steps:
      - name: Get PR ID
        run: echo "PR_ID=${{ github.event.number }}" >> $GITHUB_ENV

      - name: Download PR Artifacts
        uses: actions/download-artifact@v4
        with:
          name: pr-${{ env.PR_ID }}-test-results
          path: retrieved-results

      - name: Display Retrieved Test Results
        run: |
          echo "======================================="
          echo "Retrieved Test Results from PR ${PR_ID}:"
          cat retrieved-results/test_results.json
          echo "======================================="
